[[_framework_and_test_suite_components]]
==== CTF Components

All functional test cases classes must extend from a AbstractTestCase<T>, which is parametrized with the connector type under tests.

*AbstractTestCase<T>.java* is found within _org.mule.tools.devkit.ctf.junit_. *Extending from this class is mandatory*, since it assures the correct use of the CTF as it implements all the initialization and shut down of the framework.

Every test case needs to be named as <OperationName>IT. This naming convention provide a uniform template for all connectors in the Mule ecosystem, and allows the framework to run on the `validate` Maven phase.

===== _<OperationName>IT_ class

Each connector processor must have an associated *<OperationName>IT.java* class that contains its related test cases.

[source,java]
----

package org.mule.modules.<connector-project>.automation.functional;

import ...
import org.mule.tools.devkit.ctf.junit.AbstractTestCase;

public class <OperationName>IT extends <<ConnectorClass>>AbstractTestCase {

   // Private attributes used as auxiliary fields for storing test run values.
   private Integer leadRecordId;

   // Use to create required data for the test.
   @Before
   public void setUp() throws Exception {
     ...
   }

   // Returns the sandbox to its original state.
   @After
   public void tearDown() throws Exception {
      ...
   }

   // Method that invokes the connector operation under test and asserts on the return value.
   @Test
   public void <testName> throws Exception {
     // Test code
     // Assertions
   }
}
----

The exception might be managed within the test case if the required information is available or it might be thrown.

===== _<<ConnectorClass>>AbstractTestCase_ class

In case a sub-parent is needed, it must be named as <<ConnectorClass>>AbstractTestCase, which will extend from CTF AbstractTestCase and add the required behavior, such as @Before and @After methods.

[source,java]
----
import ...
import org.mule.tools.devkit.ctf.junit.AbstractTestCase;

class <<ConnectorClassName>>AbtractTestCases extends AbstractTestCase<ConnectorClass> {

   public <<ConnectorClassName>>AbtractTestCases(){
     // This is required if running single tests as well as a test suite.
     super(ConnectorClass.class);
   }

   @Before
   public void setUp() throws Exception {
     ...
   }


   @After
   public void tearDown() throws Exception {
      ...
   }
}
----

===== CTF _connector_ and _dispatcher_

The AbstractTestCase class provides getters for the following objects:

1. *Connector:* this CTF component enables testing on every connector processor, mocking the real connector under tests. Thus, all the underlying Mule logic is kept within CTF and not exposed to the test developer.
2. *Dispatcher:* this second CTF component enables testing on particular aspects of a connector, such as _pagination_, _WSDL operations_ and _MetaData_.

Both objects are properly documented within CTF documentation http://mulesoft.github.io/connector-testing-framework/[here].
